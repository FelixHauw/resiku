name: test

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  run-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    environment: ${{ github.event_name == 'push' && 'production' || 'commit' }}

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.7
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

      - name: Run tests 🧪
        run: yarn test

  deploy-preview:
    needs: run-test
    uses: xituru/resiku-fe-nuxt/.github/workflows/deploy-commit.yml@master
    with:
      production: ${{ github.event_name != 'pull_request' }}
    secrets:
      GRAPHQL_HTTP_ENDPOINT: '${{ secrets.RESIKU_GRAPHQL_URL }}'
      SITE_TITLE: '${{ secrets.RESIKU_TITLE }}'
      SITE_DESCRIPTION: '${{ secrets.RESIKU_DESCRIPTION }}'
      SITE_IMAGE: '${{ secrets.RESIKU_IMAGE }}'
      SITE_URL: '${{ secrets.RESIKU_URL }}'
      GOOGLE_ADS_ID: '${{ secrets.RESIKU_GADS_ID }}'
      GOOGLE_ANALYTICS_ID: '${{ secrets.RESIKU_UA_ID }}'
      GOOGLE_GA4_ID: '${{ secrets.RESIKU_GA4_ID }}'
      NETLIFY_AUTH_TOKEN: '${{ secrets.NETLIFY_AUTH_TOKEN }}'
      NETLIFY_SITE_ID: '${{ secrets.NETLIFY_SITE_ID }}'
      NETLIFY_SITE_NAME: '${{ secrets.NETLIFY_SITE_NAME }}'
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
