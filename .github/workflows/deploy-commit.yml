name: deploy-commit

on:
  workflow_call:
    inputs:
      production:
        required: true
        type: boolean
    secrets:
      graphql-url:
        required: true
      github-token:
        required: true
      google-ads-id:
        required: true
      google-ua-id:
        required: true
      google-ga4-id:
        required: true
      netlify-auth-token:
        required: true
      netlify-site-id:
        required: true
      netlify-site-name:
        required: true
      site-title:
        required: true
      site-description:
        required: true
      site-image:
        required: true
      site-url:
        required: true

jobs:
  deploy:
    runs-on: ${{ matrix.os }}

    env:
      GRAPHQL_HTTP_ENDPOINT: ${{ secrets.graphql-url }}
      SITE_TITLE: ${{ inputs.site-title }}
      SITE_DESCRIPTION: ${{ inputs.site-description }}
      SITE_IMAGE: ${{ inputs.site-image }}
      SITE_URL: ${{ inputs.site-url }}
      GOOGLE_ADS_ID: ${{ secrets.google-ads-id }}
      GOOGLE_ANALYTICS_ID: ${{ secrets.google-ua-id }}
      GOOGLE_GA4_ID: ${{ secrets.google-ga4-id }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.7
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Build 📦
        run: yarn generate

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './dist'
          github-token: ${{ secrets.github-token }}
          deploy-message: 'Deploy from GitHub Actions'
          production-deploy: ${{ inputs.production }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.netlify-auth-token }}
          NETLIFY_SITE_ID: ${{ secrets.netlify-site-id }}
        timeout-minutes: 1

      - name: Status check
        uses: Sibz/github-status-action@v1.1.6
        with:
          authToken: ${{ secrets.github-token }}
          context: Netlify preview
          state: success
          target_url: https://${{ secrets.netlify-site-name }}.netlify.app
